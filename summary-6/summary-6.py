import csv
import sys
from PIL import Image

# conventional file write
# if the file hasn't been made, it will automatically create file
file = open("names.txt", "w") # 'w' will overwrite file, creating new file
for _ in range(2):
    name = input("Name? ")
    file.write(f"{name}\n") # if without '\n' the input wouldn't be separated
file.close() # need to 'close' file in this conventional file write

# advanced file write using 'with'
with open("names.txt", "a") as file: # 'a' to append input to file, not overwrite it
    for _ in range(2):
        name = input("Name? ")
        file.write(f"{name}\n")
    # doesn't need to 'close' file

print()
# read file
with open("names.txt") as file: # 'r' is the argument to read file, but it's the default so we don't need to put it
    for line in sorted(file): # sorted to 'sort' the file ascending alphabetically
        print(f"Hi {line.rstrip()}!") # 'rstrip' method to remove new line (\n) that is being caught from file

students = []

with open("students.csv") as file: # '.csv' is a file with each values separated with comma (open students.csv to be clear)
    for line in file:
        name, house = line.rstrip().split(",")
        students.append({"name": name, "house": house})

print()
for student in sorted(students, key=lambda student: student["name"]): # 'lambda' means it is an anonymous function to be called only once
        print(f"{student['name']} from {student['house']}")

"""
# ( lambda student: student["name"] ) works the same as:

def lambda(student):
    return student["name"]
"""

# from this line and further, some of the code would require 'csv'

print()
with open("students.csv") as file:
    reader = csv.reader(file)
    for name, house in reader: # will extract both variable 'name' & 'house' respectively from left to right
        print(f"{name} from {house}")

# csv module could recognize a sentence after a comma (,) in a csv file

print()
with open("story_dict.csv") as file: # attention to the first line of 'comic_dict.csv' there is 'key' label and 'value' label, which is 'name' and 'comic'
    reader = csv.DictReader(file) # DictReader will read csv as csv-dictionary (labeled value, with label from the first line of csv)
    for row in reader:
        print(f"{row['name']} from {row['story']} by {row['author']}")

print()
name = input("Any other fav Harry Potter character? ")
house = input("Which house they're in? ")
with open("students.csv", "a", newline="") as file: # don't forget 'a' to append
    writer = csv.writer(file) # writer will write assigned data to csv
    writer.writerow([name, house])

print()
name = input("Any interesting character from any story you like? ")
story = input("What's the title of the story? ")
author = input("Who is the author? ")
with open("story_dict.csv", "a",newline="") as file: # don't forget 'a' to append
    writer = csv.DictWriter(file, fieldnames=['name', 'story', 'author']) # DictWriter will write assigned dictionary data piece to csv
    writer.writerow({"name": name, "story": story, "author": author})

print("\nCheck the students.csv & story_dict.csv file, your term should've been added!")
print("\nAlso check the 'summary-6' folder for 'cat_animated.gif'. It's generated by this code below!")

# from this line and further, some of the code would require 'Image' from 'PIL'

images = []

# run this with argument vector 'python summary-6.py cat1.gif cat2.gif'

if (sys.argv != 1):
    for arg in sys.argv[1:]: # take all arguments after first argument (its own file name)
        image = Image.open(arg)
        images.append(image)

    images[0].save(
        "cat_animated.gif", save_all=True, append_images=[images[1]], duration=200, loop=0
    )